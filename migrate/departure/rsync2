#!/bin/bash

port_=9090
check_ssh_con()
{
if [ 255 -eq $(ssh -p $port_ -q $1 exit;echo $?) ]; then
	echo " Cannot SSH to remote server $1 via port $port_"
	exit 1
fi
}

check_cert_existed()
{
	fqdn_=$(get_fqdn_proc $1)
    if [ -f "/etc/pki/tls/certs/${fqdn_}.crt" ]; then echo 1; else echo 0; fi
}
check_lets_existed()
{
	fqdn_=$(get_fqdn_proc $1)
    if [ -d "/etc/letsencrypt/archive/${fqdn_}" ]; then 
		echo 1
	else
		if [ 0 -eq $(ls /etc/letsencrypt/archive/${fqdn_}-* > /dev/null 2>&1;echo $?) ]; then
			echo 1
		else 
			echo 0
		fi
	fi
}

get_fqdn_proc()
{
    grep "\[$1\]" /etc/kusanagi.d/profile.conf -A 3 | grep FQDN | cut -d '"' -f2
}

proxy_prepare()
{
declare -A arrayIP
arrayIP=( ["f-host001.tenten.cloud"]=150.95.16.123 ["f-host002.tenten.cloud"]=150.95.113.25 ["f-host003.tenten.cloud"]=150.95.16.123 ["failover001.tenten.cloud"]=150.95.16.120 ["failover002.tenten.cloud"]=150.95.16.121 ["failover003.tenten.cloud"]=150.95.16.45 ["failover004.tenten.cloud"]=150.95.16.19 ["failover005.tenten.cloud"]=150.95.16.21 ["failover006.tenten.cloud"]=150.95.16.26 ["failover007.tenten.cloud"]=150.95.16.53 ["failover008.tenten.cloud"]=150.95.116.67 ["failover009.tenten.cloud"]=150.95.116.75 )
remote_ip=${arrayIP[$2]}
local srv=`hostname`
local_ip=${arrayIP[$srv]}
sed 's/'$local_ip'/'$remote_ip'/'g /home/proxy/${1}_http.conf > /opt/migrate/departure/${1}_http.conf
sed 's/'$local_ip'/'$remote_ip'/'g /home/proxy/${1}_ssl.conf > /opt/migrate/departure/${1}_ssl.conf
}
rsync_procedure()
{
if [ 1 -eq $(check_cert_existed $1) ]; then
	fqdn_=$(get_fqdn_proc $1)
	rsync -avzh -e 'ssh -p '$port_'' /etc/pki/tls/certs/${fqdn_}* ${2}:/etc/pki/tls/certs/ 2>&1 > /dev/null
	rsync -avzh -e 'ssh -p '$port_'' /etc/pki/tls/private/${fqdn_}* ${2}:/etc/pki/tls/private/ 2>&1 > /dev/null
fi

if [ 1 -eq $(check_lets_existed $1) ]; then
	fqdn_=$(get_fqdn_proc $1)
	if [ -d "/etc/letsencrypt/archive/${fqdn_}" ]; then
		rsync -avzh -e 'ssh -p '$port_'' /etc/letsencrypt/live/${fqdn_} ${2}:/etc/letsencrypt/live/ 2>&1 > /dev/null
		rsync -avzh -e 'ssh -p '$port_'' /etc/letsencrypt/archive/${fqdn_} ${2}:/etc/letsencrypt/archive/ 2>&1 > /dev/null
	fi
	if [ 0 -eq $(ls /etc/letsencrypt/archive/${fqdn_}-* > /dev/null 2>&1;echo $?) ]; then
		rsync -avzh -e 'ssh -p '$port_'' /etc/letsencrypt/live/${fqdn_}-* ${2}:/etc/letsencrypt/live/ 2>&1 > /dev/null
		rsync -avzh -e 'ssh -p '$port_'' /etc/letsencrypt/archive/${fqdn_}-* ${2}:/etc/letsencrypt/archive/ 2>&1 > /dev/null
	fi
	if [ -f "/etc/letsencrypt/renewal/${fqdn_}.conf" ]; then
		rsync -avzh -e 'ssh -p '$port_'' /etc/letsencrypt/renewal/${fqdn_}.conf ${2}:/etc/letsencrypt/renewal/ 2>&1 > /dev/null
		mv -f /etc/letsencrypt/renewal/${fqdn_}.conf /opt/maintenance/lets_tools/recycle_bin/
	fi
	if [ 0 -eq  $(ls /etc/letsencrypt/renewal/${fqdn_}-*.conf >/dev/null 2>&1;echo $?) ]; then
		rsync -avzh -e 'ssh -p '$port_'' /etc/letsencrypt/renewal/${fqdn_}-*.conf ${2}:/etc/letsencrypt/renewal/ 2>&1 > /dev/null
		mv -f /etc/letsencrypt/renewal/${fqdn_}-*.conf /opt/maintenance/lets_tools/recycle_bin/
	fi
fi
#proxy_prepare $1 $2
#rsync -avzh -e 'ssh -p '$port_'' /opt/migrate/departure/${1}_* ${2}:/home/proxy/ 2>&1 > /dev/null
rsync -avzh -e 'ssh -p '$port_'' /etc/nginx/conf.d/${1}_* ${2}:/etc/nginx/conf.d/ 2>&1 > /dev/null
rsync -avzh -e 'ssh -p '$port_'' /opt/migrate/departure/backup_path_${1}.log ${2}:/opt/migrate/arrival/ 2>&1 > /dev/null
ret=$?
#rm -f /opt/migrate/departure/${1}_*
if [ 1 -eq $ret ]; then
	echo " Rsync error"
#	exit 1
fi
}
